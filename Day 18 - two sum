
#include <iostream>
#include <vector>
#include <unordered_map>

std::vector<std::vector<int>> uniquePairs(std::vector<int>& arr) {
    std::unordered_map<int, int> pair_dict;
    std::vector<std::vector<int>> result;
    
    for (int num : arr) {
        if (pair_dict.find(-num) != pair_dict.end()) {
            std::vector<int> pair = {num, -num};
            if (std::find(result.begin(), result.end(), pair) == result.end() && std::find(result.begin(), result.end(), std::vector<int>{-num, num}) == result.end()) {
                result.push_back(pair);
            }
        }
        pair_dict[num] = 1;
    }
    
    return result;
}

int main() {
    std::vector<int> arr = {1, -1, 2, -2, 3, -3};
    std::vector<std::vector<int>> pairs = uniquePairs(arr);
    
    for (const auto& pair : pairs) {
        std::cout << "[" << pair[0] << ", " << pair[1] << "]" << std::endl;
    }
    
    return 0;
}
