
#include <iostream>
#include <vector>
#include <unordered_map>
#include <algorithm>

std::vector<int> findDuplicates(std::vector<int>& arr) {
    std::unordered_map<int, int> countMap;
    std::vector<int> duplicates;
    
    for (int num : arr) {
        countMap[num]++;
    }

    
    for (const auto& pair : countMap) {
        if (pair.second > 1) {
            duplicates.push_back(pair.first);
        }
    }

    
    std::sort(duplicates.begin(), duplicates.end());

    
    if (duplicates.empty()) {
        return {-1};
    } else {
        return duplicates;
    }
}

int main() {
    int n;
    std::cout << "Enter the number of elements in the array: ";
    std::cin >> n;

    std::vector<int> arr(n);
    std::cout << "Enter the elements of the array: ";
    for (int i = 0; i < n; ++i) {
        std::cin >> arr[i];
    }

    std::vector<int> result = findDuplicates(arr);

    std::cout << "Elements occurring more than once in the array are: ";
    for (int num : result) {
        std::cout << num << " ";
    }
    std::cout << std::endl;

    return 0;
}
